// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinal.Data;

namespace ProjetoFinal.Migrations
{
    [DbContext(typeof(ProjetoFinalDbContext))]
    [Migration("20211228134939_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoFinal.Models.ItemPedido", b =>
                {
                    b.Property<int>("IdItemPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int?>("PedidoIdPedido")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoIdPedido")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdItemPedido");

                    b.HasIndex("PedidoIdPedido");

                    b.HasIndex("ProdutoIdPedido");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteIdPessoa")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("PrazoEntrega")
                        .HasColumnType("datetime2");

                    b.HasKey("IdPedido");

                    b.HasIndex("ClienteIdPessoa");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("IdPessoa");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrlImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendedorIdPessoa")
                        .HasColumnType("int");

                    b.HasKey("IdProduto");

                    b.HasIndex("VendedorIdPessoa");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Cliente", b =>
                {
                    b.HasBaseType("ProjetoFinal.Models.Pessoa");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Vendedor", b =>
                {
                    b.HasBaseType("ProjetoFinal.Models.Pessoa");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("int");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("ProjetoFinal.Models.ItemPedido", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoIdPedido");

                    b.HasOne("ProjetoFinal.Models.Pedido", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoIdPedido");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Pedido", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdPessoa");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Produto", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Vendedor", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorIdPessoa");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("ProjetoFinal.Models.Cliente", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ProjetoFinal.Models.Cliente", "IdPessoa")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjetoFinal.Models.Vendedor", b =>
                {
                    b.HasOne("ProjetoFinal.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ProjetoFinal.Models.Vendedor", "IdPessoa")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
